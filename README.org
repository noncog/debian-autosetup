#+TITLE:debian-autosetup

A simple bash script (compatible with Debian-based distributions) to install software and configure your dotfiles after a fresh install.

This script is capable of installing:
- Debian sources
- Apt packages
- Flatpak/Flathub packages
- Fonts
- Git Repositories
- GTK themes
- Wallpapers
- Dotfiles managed with git --bare repositories ... see dotfiles section for more info.

* Usage
See the prerequisite section below for a minimal install setup before doing the following:
#+BEGIN_SRC :tangle no
  git clone https://github.com/noncog/debian-autosetup
  cd debian-autosetup
  chmod +x install.sh
  ./install.sh
#+END_SRC

* Customization
By default, the script is setup to my configuration but is modular and easily customizable.

- Just modify the lists with your requirements and they will be installed.
- Some actions like additional processing of Git repositories after download may require custom scripting. 

* About
The install.sh bash script is created from this README.org file using Emacs org-mode literate programming.

That means:
- The README is the shell script.
- Each section documents part of the shell script.
- You can use this README to learn how the script functions to customize it or build your own.
* Debian Sources
#+BEGIN_SRC sh :tangle install.sh :shebang "#!/bin/bash"
  debian_sources=(
      contrib
      non-free
  )
#+END_SRC

* Apt Packages
#+BEGIN_SRC sh :tangle install.sh
  apt_package_sources=(
      # gui
      xorg
      i3-wm
      dunst
      rofi
      polybar
      picom
      nitrogen
      lxappearance
      # utilities/tools
      pulseaudio
      network-manager
      network-manager-gnome
      kitty
      unzip
      scrot
      obs-studio
      # editors
      emacs
      vim
      gimp
      # programs
      firefox-esr
      anki
      # media
      ranger
      sxiv
      zathura
      vlc
      # other
      flatpak
      # drivers
      firmware-iwlwifi
      linux-headers-amd64
      nvidia-driver
      firmware-misc-nonfree
  )
#+END_SRC

* Flatpak/Flathub Packages
#+BEGIN_SRC sh :tangle install.sh
  flatpak_package_list(
      # discord
      com.discordapp.Discord
      # spotify
      com.spotify.Client
  )
#+END_SRC

* Font Sources
#+BEGIN_SRC sh :tangle install.sh
  font_sources=(
      # Fira Code
      https://github.com/tonsky/FiraCode/releases/download/6.2/Fira_Code_v6.2.zip
      # Font Awesome 5
      https://github.com/FortAwesome/Font-Awesome/releases/download/5.15.4/fontawesome-free-5.15.4-desktop.zip
  )
#+END_SRC

* Git Sources
I use git to source my theme, i3-gaps for debian, and my wallpapers. The installer can clone any repo into ~/Downloads. It is up to you to process the downloaded content yourself.
#+BEGIN_SRC sh :tangle install.sh
  git_sources=(
      # gtk - dracula theme - other theming done in configs themselves
      https://github.com/dracula/gtk
      # i3-gaps debian
      https://github.com/maestrogerardo/i3-gaps-deb
      # my wallpaper repository
      https://github.com/noncog/wallpapers
  )
  #+END_SRC

* Install
** Debian Sources
#+BEGIN_SRC sh :tangle install.sh
    appended_sources=${debian_sources[@]}
    sed -i "/^deb/ s/$/ $appended_sources/" /etc/apt/sources.list
#+END_SRC
** Apt Packages
#+BEGIN_SRC sh :tangle install.sh
  sudo apt install -y ${apt_package_list[@]}
#+END_SRC
** Flatpak/Flathub Packages
#+BEGIN_SRC sh :tangle install.sh
  sudo flatpak install -y flathub ${flatpak_package_list[@]}
#+END_SRC
** Fonts
Note: If your fonts won't work, (they should) then their permissions may need modified. Use chmod 644 on them.
#+BEGIN_SRC sh :tangle install.sh
  # create downloads folder
  mkdir ${HOME}/Downloads

  # download fonts
  for url in "${font_sources[@]}"; do
      wget -P ${HOME}/Downloads/fonts $url
  done

  # unzip fonts
  cd ${HOME}/Downloads/fonts
  unzip "*.zip"

  # create/check fonts directory
  fonts_dir="${HOME}/.local/share/fonts"
  if [ ! -d "${fonts_dir}" ]; then
      echo "mkdir -p $fonts_dir"
      mkdir -p "${fonts_dir}"
  else
      echo "Found fonts dir $fonts_dir"
  fi

  # find and copy fonts to font directory
  find ${HOME}/Downloads/fonts/ -name '*.ttf' -exec cp {} "${fonts_dir}" \;
  find ${HOME}/Downloads/fonts/ -name '*.otf' -exec cp {} "${fonts_dir}" \;

  # reload font cache
  fc-cache -f
#+END_SRC
** Git Repositories
#+BEGIN_SRC sh :tangle install.sh
  # clone git repositories
  cd ${HOME}/Downloads
  for url in "${git_sources[@]}"; do
      git clone $url
  done
#+END_SRC
** Theme
#+BEGIN_SRC sh :tangle install.sh
  # create/check theme directory
  themes_dir="${HOME}/.themes"
  if [ ! -d "${themes_dir}" ]; then
      echo "mkdir -p $themes_dir"
      mkdir -p "${themes_dir}"
  else
      echo "Found themes dir $themes_dir"
  fi

  # move and copy theme files to where they go
  mv ${HOME}/Downloads/gtk $themes_dir
#+END_SRC
** Wallpapers
#+BEGIN_SRC sh :tangle install.sh
  # create/check wallpaper directory
  wallpapers_dir="${HOME}/Pictures"
  if [ ! -d "${wallpapers_dir}" ]; then
      echo "mkdir -p $wallpapers_dir"
      mkdir -p "${wallpapers_dir}"
  else
      echo "Found wallpapers dir $wallpapers_dir"
  fi

  # move and copy theme files to where they go
  mv ${HOME}/Downloads/wallpapers $wallpapers_dir
#+END_SRC

* Dotfiles
I manage my dotfiles using a git --bare repository. This allows me to automatically install them where they belong when I clone them from GitHub.
For more information and how to setup, see my [[https://github.com/noncog/.dotfiles][dotfiles-repository]].
#+BEGIN_SRC sh :tangle install.sh
  # clone dotfiles
  git clone --bare https://github.com/noncog/.dotfiles $HOME/.dotfiles

  # checkout will backup dotfiles in the way
  cd ${HOME}
  mkdir -p .dotfiles-backup && \
  /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME checkout 2>&1 | egrep "\s+\." | awk {'print $1'} | \
  xargs -I{} mv {} .dotfiles-backup/{}

  # now check out
  /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME checkout

  # hide untracked files
  /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME config --local status.showUntrackedFiles no
#+END_SRC

* Custom Notes / After Install
I use this section to remind myself of what else needs to be done to configure my system.

These notes go into a separate file I can reference after installation. 
#+BEGIN_SRC sh :tangle after_install.sh :shebang "#!/bin/bash"
  echo "1. Install i3-gaps"
  echo "2. Configure wifi"
  echo "3. Set lxappearance theme"
  echo "4. Configure Firefox"
  echo "- Setup Firefox Secure Profile: https://ffprofile.com/"
  echo "- Install BitWarden extension: https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/"
  echo "- Install Decentraleyes extension: https://addons.mozilla.org/en-US/firefox/addon/decentraleyes/"
  echo "- Install Ublock Origin extension: https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/"
  echo "- Install Dracula theme extension: https://addons.mozilla.org/en-US/firefox/addon/dracula-dark-colorscheme/"
  echo "Open URLs in Kitty: Ctrl+Shift+e"
  echo "5. Install CLion"
  echo "6. Install Pycharm"
  echo "7. Install Tor"
  echo "8. Install yt-dlp"
#+END_SRC

* Prerequisite
On a minimal install system you will need to do the following before cloning this repository and using it.
#+BEGIN_SRC sh :tangle no
  su -
  apt install sudo
  sudo adduser <username> sudo
  reboot
  sudo apt install git
#+END_SRC

* TODO:
- Develop testing branch without drivers
- Add note about tested on.
